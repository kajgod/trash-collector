{"version":3,"sources":["../../src/classes/settings.class.ts","../../src/classes/element.class.ts","../../src/scripts/types.ts","../../src/classes/player.class.ts","../../src/classes/bush.class.ts","../../src/classes/trash.class.ts","../../src/classes/animal.class.ts","../../src/levels/1.ts","../../src/levels/levels.ts","../../src/scripts/actions.ts","../src/main.ts"],"names":[],"mappings":";;;;;;AOAA,ALKA,IKLM,ALKM,KKLD,ILKX,2bKLA;ADAA,AFAA,AHAA,AEAA,AEAA,AGAA,ACAA,ACAA,eHsBe;;ADrBf,AHAA,AMAA,APIA,AQAA,CRAA,GQAM,ORAM,EQAG,GAAgB,IRA/B,EAAqB,EQAkB,CAAC,cAAT,CAAwB,YAAxB,CAA/B;ARCE,AQCF,ERDE,EQCI,IAAI,GRDR,AQCiB,CRDjB,SAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CQC4B,CAAX,ERDjB,AQC+B,SAAd,CAAnB;AFLA,ACAA,APKE,AQCF,ERDE,EMLI,AEMA,MFNM,AEMA,CRDV,CAAA,CMLuB,AEMF,CFLnB,GEKuB,CAAC,GRD1B,CAAA,CMLuB,CAAzB,AEMA,IRDE,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,AQCF,ERDE,EQCI,ORDJ,AQCW,CRDX,EQCwB,CFHX,GEGe,CAAC,ERD7B,CAAA,IQCF,ERDE,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AOLF,APME,AQEF,ERFE,EFTmB,AUWf,MAAM,CRFV,CAAA,CQEa,QRFb,CAAA,EQEwB,CAAC,IRFzB,CAAA,GAAA,CAAA,CAAA,EQE8B,CRF9B,OAAA;AFHA,AEID,AQEC,CRPF,CQOE,CRPU,KQOJ,CAAC,GRPY,CQOnB,OVLS,OADT,EAES,QEHC,MFCV,EAGS,CAHT,AEDmB,EFKV,CAJT,AEDmB,EFKD,AELC,CAArB;AFKoB,ASNpB,ACSE,EAAA,OAAO,CAAC,GAAR,CAAY,UAAA,MAAM,EAAG;AACnB,IAAA,MAAM,CAAC,IAAP;AVPO,ASFX,ACUG,GAFD,MVNS,OAAA,GAAA,OAAA;AACA,AUQT,SVRS,cAAA,GAAA,MUQO,IAAhB,IVRS;AACA,ASHX,ACWC,CANyB,EAMvB,MVRQ,AUQF,CVRE,AUEe,CAA1B,EVFW,CAAA;AACA,SAAA,CAAA,GAAA,CAAA;AATT,AUkBF,QAAQ,CVlBN,AUkBO,UVlBP,GAAqB,EAArB,CUkBF,CAA0B,SAA1B,EAAqC,UAAC,CAAD;AVjBnC,AUiBmC,SVjBnC,AUkBA,IVlBA,EUkBM,CVlBS,AUkBR,EVlBP,aUkBA,CAAuB,CAAC,CAAC,IAAzB,CADmC;AVPjC,AUOiC,CAArC,QVPS,UAAL,GAAkB,KAAK,aAAL,EAAlB;AACD;;;;oCAEY;AACX,IIbiB,OJaZ,MAAL,GAAc,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAd;AACA,WAAK,MAAL,CAAY,YAAZ,CAAyB,OAAzB,EAAkC,KAAK,cAAvC;AACA,WAAK,MAAL,CAAY,KAAZ,CAAkB,KAAlB,GAA0B,KAAK,UAA/B;AACA,WAAK,MAAL,CAAY,KAAZ,CAAkB,MAAlB,GAA2B,KAAK,UAAhC;AACA,IClBiB,AICA,OLiBZ,MAAL,CAAY,KAAZ,CAAkB,IAAlB,GAAyB,KAAK,IAAL,EAAzB;AIhBF,AJiBE,WAAK,KIhBL,CADF,AJiBE,CAAY,CIfZ,CAFF,EAGE,CJcA,CAAkB,GAAlB,EIjBF,CJiB0B,CIbxB,IJa6B,IAAL,EAAxB,IIjBF,EAKS,SALT,EAK6B;AAAA,AJa3B,ASdJ,IHLqB,AHAA,AMKjB,MAAJ,CTcS,OAAL,CAAa,WAAb,CAAyB,KAAK,MAA9B;AACD,ASfH,IACE,MAAM,GAAW,EADnB;ALC+B,AKD/B,IAEE,OAAO,GAAY,EAFrB;ARHE,AIDA,AIIF,IAGE,OAAO,GAAa,EAHtB,CJHI,CADF,CJES,CADT,AICE,CAFF,CJGS,CAFT,AIEE,EJCO,KIJT,EJCA,AIGE,EJCO,YILT,EJCA,AIIS,EJAsB,OIL/B,EAK6B;ADE3B,AHF6B,AIAF,8BDErB,CAAN,EAAS,CAAT,EAAY,AJcD,OIdX,EAAqB,cAArB;AEPF,AFKS,ADHT,AHoBE,ASbJ,IAAM,MLJK,AJiBD,ISbM,GTaC,ASbE,CHRf,AHEA,CGHF,AFKS,ADHT,CHoB0B,CMpBxB,AHEA,CGJF,AFKS,ADHT,EGCE,AHEA,EHiB8B,ASb5B,KHTJ,AFKS,ADHT,AHoBqC,EMlBnC,AHEA,GMGe,CAAC,ITahB,CSbe,EAAgB,GHTjC,AHEA,EGGS,AHEA,IMEQ,EAAgD,GHTjE,AHEA,EGG6B,AHEA;AGFA,AFAA,AHAE,AEEF,AHgB3B,AKlB2B,AIK7B,MAAM,QAAQ,GAAa,MTaf,OAAO,CAAC,ESbc,KAAP,CTaf,CSb6B,CTavC,ISbyB,CAAoB,IAApB,CAA3B;ALFC,AJgBA;AMnB4B,ALE3B,AEA2B,AEA3B,AIIF,OAAK,IAAI,CAAC,GAAW,CAArB,EAAwB,CAAC,IAAI,EAA7B,EAAiC,CAAC,ERJ1B,AIAA,AIIR,CJJE,EAAS,CAAT,EAAY,CJAZ,EAAe,IIAf,EAAqB,QJArB,EAA+B,CAA/B,EAAkC,CAAlC,AIAA;AJLO,AIGA,AIOP,SAAK,CRVE,AIGA,CJHA,EQUE,CRVF,AQUG,CRVH,EQUc,CAArB,CJPO,CIOiB,CAAC,CJPlB,GIOsB,EAA7B,EAAiC,CAAC,CJP3B,CIOP,EAAsC;AHLtC,ALJO,AEMP,AEJ2B,AIQzB,ELd4B,QHIvB,AQUD,CRVC,EQUE,CRVF,CAAA,CQUa,QAAQ,CAAC,CAAD,CTa1B,ASbkB,CAAY,CAAC,CHN3B,AHEA,CGFN,AHEA,CMIoC,CHN3B,AHEA,AMIW,CHNpB,AHEA,AMIE,EHNU,AHEA,OGFZ,AHEA,EGFqB,AHEA,cGFrB,AHEA;AGJO,ALDA,AEGA,AHoBP,AKnBD,UCHQ,ALDA,AEGA,AHoBD,OCvBC,ADuBM,EMtBN,AHEA,CFHA,ADuBkB,CAAC,CMtBnB,AHEA,IHoBwB,CCvBxB,ADuBmB,GAAS,CMtB5B,AHEA,AHoBkB,IAAe,GAAhB,GAAuB,KAAK,UAApD;AMtB2B,ALApB,AEKP,AHkBA,ASdE,URTK,AEKF,IMIK,ENJV,CMIE,ENJY,IHkBJ,CCvBH,GAAA,AEKe,CAAC,EHkBN,CAAC,QAAR,ECvBH,AEKO,AHkBd,CGlBqC,KAAvB,CAAd;AGFD,ALTD,AD8BC,ASdK,URhBN,GQgBW,GAAL,CRhBN,GAAkB,CAAlB;AACA,AEWE,AMKM,URhBR,AEWO,MAAL,CFXF,AEWc,GFXI,CAAlB,QEWE,CAAyB,OAAzB,EAAkC,cAAlC;gCEDO;AJFP,AEIA,AEDA,AIMI,URTC,AEIA,CEDA,EIMI,GNLT,AMKI,CNLQ,AEDZ,CAAY,KJHZ,CIGA,GLoBE,CGnBF,CAAwB,MAAK,MAA7B;AHoBA,AKpBD,AIMO,UTcA,ASdA,MAAM,CTcC,ESdE,CTcU,CAAC,ESdP,GTcY,CMtB7B,ANsBwB,GAAS,CAAV,IAAe,GA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","file":"main.1f19ae8e.js","sourceRoot":"../build","sourcesContent":["export default class Settings {\n  resolution: number = 20;\n  step: number = 10;\n  sprite: HTMLDivElement;\n  playerSize: string;\n\n  constructor(\n    public element: HTMLElement,\n    public elementClasses: string,\n    public x: number,\n    public y: number\n  ) {\n    this.playerSize = this.getPlayerSize();\n  }\n\n  createElement() {\n    this.sprite = document.createElement(\"div\");\n    this.sprite.setAttribute(\"class\", this.elementClasses);\n    this.sprite.style.width = this.playerSize;\n    this.sprite.style.height = this.playerSize;\n    this.sprite.style.left = this.posX();\n    this.sprite.style.top = this.posY();\n    this.element.appendChild(this.sprite);\n  }\n\n  getPlayerSize(): string {\n    const percent: number = 100 / this.resolution;\n    return `${percent.toString()}%`;\n  }\n\n  posX(): string {\n    const percent: number = ((this.x - 1) * 100) / this.resolution;\n    return `${percent.toString()}%`;\n  }\n\n  posY(): string {\n    const percent: number = ((this.y - 1) * 100) / this.resolution;\n    return `${percent.toString()}%`;\n  }\n}\n","import Settings from \"./settings.class\";\n\nexport default class Element extends Settings {\n  offsetX: number = 0;\n  offsetY: number = 0;\n  constructor(\n    public x: number,\n    public y: number,\n    public element: HTMLElement,\n    public elementClasses: string\n  ) {\n    super(element, elementClasses, x, y);\n    this.createElement();\n  }\n\n  left() {\n    this.offsetX = this.offsetX - this.step;\n    this.execMove();\n  }\n\n  right() {\n    this.offsetX = this.offsetX + this.step;\n    this.execMove();\n  }\n\n  up() {\n    this.offsetY = this.offsetY - this.step;\n    this.execMove();\n  }\n\n  down() {\n    this.offsetY = this.offsetY + this.step;\n    this.execMove();\n  }\n\n  execMove() {\n    this.sprite.style.transform = `translate3d(${this.offsetX}%, ${this.offsetY}%, 0)`;\n  }\n\n  coordinates(): number[] {\n    return [\n      (this.x * 100) / this.resolution + (this.offsetX * 1) / this.resolution,\n      (this.y * 100) / this.resolution + (this.offsetY * 1) / this.resolution,\n    ];\n  }\n}\n","import Player from \"../classes/player.class\";\nimport Bush from \"../classes/bush.class\";\nimport Trash from \"../classes/trash.class\";\nimport Animal from \"../classes/animal.class\";\n\nexport enum Direction {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\nexport interface Game {\n    player: Player,\n    bushes: Bush[],\n    trashes: Trash[],\n    animals: Animal[]\n}\n","import Element from \"./element.class\";\nimport { Direction } from \"../scripts/types\";\n\nexport default class Player extends Element {\n  artDiv: HTMLDivElement;\n\n  constructor(\n    x: number,\n    y: number,\n    element: HTMLElement,\n    elementClasses: string,\n    public direction: Direction\n  ) {\n    super(x, y, element, elementClasses);\n    this.artDiv = document.createElement(\"div\");\n    this.artDiv.setAttribute(\"class\", \"player right\");\n    this.sprite.appendChild(this.artDiv);\n  }\n\n  move() {\n    switch (this.direction) {\n      case Direction.Right:\n        this.right();\n        break;\n      case Direction.Left:\n        this.left();\n        break;\n      case Direction.Up:\n        this.up();\n        break;\n      case Direction.Down:\n        this.down();\n        break;\n    }\n  }\n\n  switchDirection(dir: string) {\n    switch (this.direction) {\n      case Direction.Right:\n        this.artDiv.classList.toggle(\"right\");\n        break;\n      case Direction.Left:\n        this.artDiv.classList.toggle(\"left\");\n        break;\n      case Direction.Up:\n        this.artDiv.classList.toggle(\"up\");\n        break;\n      case Direction.Down:\n        this.artDiv.classList.toggle(\"down\");\n        break;\n    }\n    switch (dir) {\n      case \"ArrowRight\":\n        this.artDiv.classList.toggle(\"right\");\n        this.direction = Direction.Right;\n        break;\n      case \"ArrowLeft\":\n        this.artDiv.classList.toggle(\"left\");\n        this.direction = Direction.Left;\n        break;\n      case \"ArrowUp\":\n        this.artDiv.classList.toggle(\"up\");\n        this.direction = Direction.Up;\n        break;\n      case \"ArrowDown\":\n        this.artDiv.classList.toggle(\"down\");\n        this.direction = Direction.Down;\n        break;\n    }\n  }\n}\n","import Element from \"./element.class\";\nimport { Direction } from \"../scripts/types\";\n\nexport default class Bush extends Element {\n  constructor(\n    x: number,\n    y: number,\n    element: HTMLElement,\n    elementClasses: string,\n    public direction: Direction\n  ) {\n    super(x, y, element, elementClasses);\n  }\n}\n","import Element from \"./element.class\";\nimport { Direction } from \"../scripts/types\";\n\nexport default class Trash extends Element {\n  constructor(\n    x: number,\n    y: number,\n    element: HTMLElement,\n    elementClasses: string,\n    public direction: Direction\n  ) {\n    super(x, y, element, elementClasses);\n  }\n\n  collected(){\n    this.sprite.remove();\n  }\n}\n","import Element from \"./element.class\";\nimport { Direction } from \"../scripts/types\";\n\nexport default class Animal extends Element {\n  constructor(\n    x: number,\n    y: number,\n    element: HTMLElement,\n    elementClasses: string,\n    public direction: Direction\n  ) {\n    super(x, y, element, elementClasses);\n  }\n\n  move() {\n    switch (this.direction) {\n      case Direction.Right:\n        this.right();\n        break;\n      case Direction.Left:\n        this.left();\n        break;\n      case Direction.Up:\n        this.up();\n        break;\n      case Direction.Down:\n        this.down();\n        break;\n    }\n  }\n\n  switchDirection() {\n    switch (this.direction) {\n      case Direction.Right:\n        this.direction = Direction.Left;\n        break;\n      case Direction.Left:\n        this.direction = Direction.Right;\n        break;\n      case Direction.Up:\n        this.direction = Direction.Down;\n        break;\n      case Direction.Down:\n        this.direction = Direction.Up;\n        break;\n    }\n  }\n\n}\n","const level: string =`\nBBBBBBBBBBBBBBBBBBBB\nB000000000000000000B\nB000000000000T00000B\nB00T0000B0000000000B\nB0000000B0000000000B\nB000A000B0000000000B\nB0000000B0000000000B\nB000000000000000000B\nB000B00T00000000000B\nBP00000000000000000B\nB000000000000000000B\nB000000000000A00000B\nB00000000B000000000B\nB0000A0000000000000B\nB00000000000000T000B\nB000000000000000000B\nB00B00000A00T000B00B\nB000000000000000000B\nB00T00000B000B00000B\nBBBBBBBBBBBBBBBBBBBB\n`;\nexport default level;","import level1 from \"./1\";\n\nconst levels: string[] = [\n    level1\n];\n\nexport default levels;","import Player from \"../classes/player.class\";\nimport Bush from \"../classes/bush.class\";\nimport Trash from \"../classes/trash.class\";\nimport Animal from \"../classes/animal.class\";\nimport { Direction, Game } from \"../scripts/types\";\nimport levels from \"../levels/levels\";\nimport { ticker } from \"../main\";\n\nlet player: Player,\n  bushes: Bush[] = [],\n  trashes: Trash[] = [],\n  animals: Animal[] = [];\n\nconst startLevel = (level: number, mountGame: HTMLElement): Game => {\n  const charList: string[] = levels[level].split(/\\n/);\n  for (let y: number = 1; y <= 20; y++)\n    for (let x: number = 1; x <= 20; x++) {\n      let cur: string = charList[y][x - 1];\n      switch (cur) {\n        case \"0\":\n          break;\n        case \"P\":\n          player = new Player(\n            x,\n            y,\n            mountGame,\n            \"element\",\n            Direction.Right\n          );\n          break;\n        case \"B\":\n          bushes.push(new Bush(x, y, mountGame, \"element bush\", null));\n          break;\n        case \"T\":\n          trashes.push(new Trash(x, y, mountGame, \"element trash\", null));\n          break;\n        case \"A\":\n          animals.push(\n            new Animal(\n              x,\n              y,\n              mountGame,\n              \"element animal\",\n              Math.random() >= 0.5 ? Direction.Right : Direction.Down\n            )\n          );\n          break;\n      }\n    }\n  return {\n    player,\n    bushes,\n    trashes,\n    animals,\n  };\n};\n\nconst checkCollisions = (game: Game) => {\n  const diff: number = 100 / player.resolution;\n  const check = (x1: number, y1: number, x2: number, y2: number): boolean => {\n    if (x1 === x2 || (x1 > x2 && x1 < x2 + diff) || (x2 > x1 && x2 < x1 + diff))\n      if (\n        y1 === y2 ||\n        (y1 > y2 && y1 < y2 + diff) ||\n        (y2 > y1 && y2 < y1 + diff)\n      )\n        return true;\n    return false;\n  };\n  // player\n  {\n    let [x1, y1]: number[] = player.coordinates();\n    if (x1 % player.resolution !== 0 && y1 % player.resolution !== 0) {\n      bushes.map((bush) => {\n        let [x2, y2]: number[] = bush.coordinates();\n        if (check(x1, y1, x2, y2)) endGame();\n      });\n      animals.map((animal) => {\n        let [x2, y2]: number[] = animal.coordinates();\n        if (check(x1, y1, x2, y2)) endGame();\n      });\n      trashes.map((trash, key) => {\n        let [x2, y2]: number[] = trash.coordinates();\n        if (check(x1, y1, x2, y2)) {\n          trash.collected();\n          delete trashes[key];\n          checkCompletedLevel();\n        }\n      });\n    }\n  }\n  // animal\n  animals.map((animal) => {\n    let [x1, y1]: number[] = animal.coordinates();\n      bushes.map((bush) => {\n        let [x2, y2]: number[] = bush.coordinates();\n        if (check(x1, y1, x2, y2)) animal.switchDirection();\n      });\n  });\n};\n\nconst endGame = () => {\n  clearInterval(ticker);\n  alert(\"You are dead!\");\n};\n\nconst checkCompletedLevel = () => {\n  for (let i: number = 0; i < trashes.length; i++) {\n    if (trashes[i]) return;\n  }\n  clearInterval(ticker);\n  alert(`Well done! You collected all ${trashes.length} pieces of trash!`);\n};\n\nexport { startLevel, endGame, checkCollisions };\n","import { startLevel, checkCollisions } from \"./scripts/actions\";\nimport { Game } from \"./scripts/types\";\nimport Player from \"./classes/player.class\";\nimport Animal from \"./classes/animal.class\";\n\nconst mountGame: HTMLElement = document.getElementById(\"mount-game\");\n\nconst game: Game = startLevel(0, mountGame);\nconst player: Player = game.player;\nconst animals: Animal[] = game.animals;\n\nconst ticker = setInterval(() => {\n  player.move();\n  animals.map(animal =>{\n    animal.move();\n  });\n  checkCollisions(game);\n}, 100 / 3);\n\ndocument.addEventListener(\"keydown\", (e: KeyboardEvent) =>\n  player.switchDirection(e.code)\n);\n\nexport { ticker };\n"]}