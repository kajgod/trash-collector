{"version":3,"sources":["../../src/classes/settings.class.ts","../../src/classes/element.class.ts","../../src/scripts/types.ts","../../src/classes/player.class.ts","../../src/classes/bush.class.ts","../../src/classes/trash.class.ts","../../src/classes/animal.class.ts","../../src/levels/1.ts","../../src/levels/2.ts","../../src/levels/3.ts","../../src/levels/levels.ts","../../src/scripts/actions.ts","../src/main.ts"],"names":[],"mappings":";;;;;;AOAA,ACAA,ACAA,APKA,IKLM,ACAA,ACAA,APKM,KKLD,ACAA,ACAA,IPKX,mSKLA,ACAA,ACAA;AHAA,AFAA,AHAA,AEAA,AEAA,AKAA,ACAA,ACAA,eLkBe,ACAA,ACAA;;AHjBf,AHAA,AOAA,ACAA,ATIA,AUAA,CVAA,GUAM,OVAM,EUAG,GAAgB,IVA/B,EAAqB,EUAkB,CAAC,cAAT,CAAwB,YAAxB,CAA/B;AVCE,AUCF,EVDE,EUCI,IAAI,GVDR,AUCiB,CVDjB,SAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CUC4B,CAAX,EVDjB,AUC+B,SAAd,CAAnB;AFLA,ACAA,ATKE,AUCF,EVDE,EUCI,MAAM,CVDV,CAAA,CUCqB,IAAI,CAAC,GVD1B,CAAA,EUCF,IVDE,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACA,AUCF,EVDE,EUCI,OVDJ,AUCW,CVDX,EUCwB,IAAI,CAAC,EVD7B,CAAA,IUCF,EVDE,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;ASLF,ATME,AUMF,EVNE,EFTmB,EYef,CAAC,IVNL,CAAA,CUMF,GAAgB,KVNd,AUMF,CVNE,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AFFA,AEGD,AUMD,CVXA,EAAY,CUWN,MAAM,EVXS,CUWN,OZRJ,IYQe,CAAC,EZTzB,EAES,QEJC,AUWoB,MZT9B,EAGS,CAHT,AEFmB,EFMV,CAJT,AEFmB,EFMD,AENC,CAArB;AFMoB,AUPpB,ACAA,ACaE,IFbI,EEaA,IFbM,EEaA,CFba,AEaZ,CFba,KEaxB,EAAmB,EFbI,EAAS,UAAT,EAAiB,UAAjB,CAAzB;AEcI,IAAA,MAAM,CAAC,IFZI,AEYX;AZVO,AWHX,ACcI,IAAA,KZXO,EYWA,CAAC,GAAR,CZXO,AYWK,GZXL,OAAA,AYWM,MAAD,EAAW;AZVhB,AYWL,MAAA,GZXK,GYWC,CAAC,IAAP,MZXK,GAAA,cAAA;AACA,AWHX,ACcK,KAFD,IZTO,CAAA,GAAA,CAAA;AACA,AYWP,SZXO,CAAA,GAAA,CAAA,oBYWS,IAAhB;AZrBF,AYsBC,SZtBD,UAAA,GAAa,EAAb;AAEA,AYqBD,CARyB,EAQvB,MZrBD,AYqBO,CARiB,CAA1B,EZbE,GAAe,CAAf;AAUE,SAAK,UAAL,GAAkB,KAAK,aAAL,EAAlB;AACD,AYYH,QAAQ,CAAC,gBAAT,CAA0B,SAA1B,EAAqC,UAAC,CAAD,EAAqB;AACxD,MAAI,CAAC,MAAM,CAAC,MAAZ,EAAoB;AAClB,IAAA,MAAM,CAAC,MAAP,GAAgB,IAAhB;AACA,IAAA,IAAI,CAAC,gBAAL;AACD,oCZdY;AACX,IIdiB,OJcZ,MAAL,GAAc,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAd;AACA,AYaF,EAAA,MAAM,CAAC,EZbA,MAAL,CAAY,MYad,CAAuB,CAAC,CAAC,GZbvB,CAAyB,AYa3B,OZbE,EAAkC,KAAK,cAAvC;AACA,AYaH,CAND,UZPS,MAAL,CAAY,KAAZ,CAAkB,KAAlB,GAA0B,KAAK,UAA/B;AACA,WAAK,MAAL,CAAY,KAAZ,CAAkB,MAAlB,GAA2B,KAAK,UAAhC;AACA,ICnBiB,AICA,OLkBZ,MAAL,CAAY,KAAZ,CAAkB,IAAlB,GAAyB,KAAK,IAAL,EAAzB;AIjBF,AJkBE,WAAK,KIjBL,CADF,AJkBE,CAAY,CIhBZ,CAFF,EAGE,CJeA,CAAkB,GAAlB,EIlBF,CJkB0B,CIdxB,IJc6B,IAAL,EAAxB,IIlBF,EAKS,SALT,EAK6B;AAAA,AJc3B,AWdJ,ILNqB,AHAA,AQMjB,MAAJ,CXcS,OAAL,CAAa,WAAb,CAAyB,KAAK,MAA9B;AACD,AWfH,IACE,MAAM,GAAW,EADnB;APA+B,AOA/B,IAEE,OAAO,GAAY,EAFrB;AVJE,AIDA,AMKF,IAGE,OAAO,GAAa,EAHtB,CNJI,CADF,CJES,CADT,AICE,CAFF,CJGS,CAFT,AIEE,EJCO,KIJT,EJCA,AIGE,EJCO,YILT,EJCA,AIIS,EJAsB,OIL/B,EAK6B;ADE3B,AHF6B,AIAF,AMA/B,IAIE,KAJF,qBPEU,CAAN,EAAS,CAAT,EAAY,AJeD,OIfX,EAAqB,cAArB;AEPF,AFKS,ADHT,AHqBE,AWlBJ,IAKE,MPLS,AJkBD,GWlBV,IXkBiB,CMtBb,AHEO,CGHT,AFKS,ADHT,CHqB0B,CMrBxB,AHEO,CGJT,AFKS,ADHT,EGCE,AHEA,EHkB8B,KMvBhC,AFKS,ADHT,AHqBqC,EMnBnC,AHEA,QHiBA,MMvBF,AHEA,EGGS,AHEA,SGPT,AHEA,EGG6B,AHEA;AGFA,AFAA,AHAE,AEEF,AHiB3B,AKnB2B,uBLmBjB,OAAO,CAAC,QAAR,EAAV;AIhBD,AJiBA,AWbH,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,OAAD,EAAkB,MAAlB,EAA+C;ALPnC,ALE3B,AEA2B,AEA3B,AMMF,EAAA,KAAK,GAAG,OAAR,aVNQ,AIAA,CAAN,EAAS,CAAT,EAAY,CJAZ,EAAe,IIAf,EAAqB,QJArB,EAA+B,CAA/B,EAAkC,CAAlC,AIAA;AJLO,AIGA,AMST,EAAA,QVZS,AIGA,CJHA,AUYA,GVZA,AUYG,CVZH,IIGA,CMST,ENTS,SAAA;ACEP,ALJO,AEMP,AEJ2B,EDNG,QHIvB,CAAA,GAAA,CAAA,YDwBL,GMpBI,AHEA,CGFN,AHEA,EGFS,AHEA,CGFT,AHEA,EGFY,AHEA,OGFZ,AHEA,EGFqB,AHEA,cGFrB,AHEA;AGJO,ALDA,AEDA,AHyBP,AKpBD,AMOD,MAAM,ILVG,ALDA,AEDA,AHyBD,CGzBC,GAAA,AQYK,CRZL,EFCA,ADwBM,AWbY,ELVlB,CLDA,ADwBkB,CAAC,CMvBnB,INuBwB,CCxBxB,ADwBmB,GAAS,CMvB5B,ANuBkB,EWbO,EXaQ,GAAhB,AWbC,EAAc,CXaQ,IWbtB,CXa2B,AWbP,IAApB,CAA3B,KXaE;AMvB2B,ALApB,AEDA,AHyBP,UCxBO,AEDA,CAAA,GAAA,CAAA,QHyBG,CCxBH,GAAA,GDwBU,CAAC,QAAR,ECxBH,ADwBP;AMrBD,ALTD,AEQS,AHuBR,AWdD,OAAK,GVjBL,AEQS,CQSA,CAAC,GAAW,CAArB,CVjBA,CUiBwB,CRTf,AQSgB,CVjBP,CAAlB,CEQS,CQSoB,QRTpB,UQS6B,UAAtC,EAAkD,CAAC,EAAnD;AVhBA,AUiBE,SAAK,CVjBP,GUiBW,CAAC,GVjBZ,AUiBuB,CAArB,EVjBgB,AUiBQ,CVjB1B,AUiB2B,IAAI,kBAAS,UAAtC,EAAkD,CAAC,EAAnD,EAAuD;ARPvD,AQQE,URRG,AQQC,GAAG,GAAW,QRRpB,AQQ4B,CAAC,CAAD,CAAR,CAAY,CAAC,GNR1B,AMQ6B,CAAhB,CAAlB;AVVF,AIGA,UJHK,CIGA,MAAL,CAAY,KJHZ,CIGA,GLqBE;AGzByB,AH0B3B,AKrBD,AMOG,UXcI,IWdI,GXcG,AWdX,GXcuB,CAAC,KAAK,CMvB7B,ANuBwB,GAAS,CAAV,IAAe,GAAhB,GAAuB,KAAK,UAApD;AMtBA,ALN6B,AEM9B,AHuBC,AWdI,aAAK,CLTD,EKSJ,GLTS,INuBH,KMvBV,ENuBiB,CAAC,QAAR,EAAV;AMtBE,ALHH,AD0BA,AWdO,aLTC,iBAAU,KAAf;AACE,eAAK,KAAL;AACA,AKQA,ENvB2B,WMuBtB,GAAL;AACE,cAAI,CAAC,MAAL,EAAa,cRVP;AGEV,AHDF,AQWQ,WRXH,CQWG,CLVD,IHDP,CQWc,ERXA,CQWG,IAAI,EVdnB,CEGoB,CAAC,CGCN,IAAf,MKUe,CACP,CRZI,AQWG,CRXoB,CQa3B,CAFO,EAGP,CRdI,CAAd,OQWiB,EAIP,oBAJO,EAKP,iBAAU,KALH,CAAT;ALTJ,ALJJ,AEGA,AQiBO,WVpBF,AEGA,AQQC,ILPG,EHDT,AQiBa,CVpBb,AEGY,CGCR,ELJW,KAAK,IEGpB,CAAyB,EFHV,GAAe,EEG9B,EAAkC,CFHC,IAAnC,SEGA;AGEI,ALJJ,AEGA,AQkBQ,WVrBH,AEGA,CQkBG,KRlBR,CAAY,AQkBE,CVrBd,AUqBe,QAAP,CAAgB,CRlBxB,AQkBQ,CRlBgB,CQkBG,CAAnB,EAAsB,CRlBD,MAA7B,UQkBwC,KAAhC;AVpBT,AEIA,AHpBsB,AWqCd,QXrCc,CAAA,UAAA,GAAqB,EAArB;AMoBnB,aAAK,iBAAU,EAAf;AACE,AKiBE,eLjBG,EAAL;AACA,4BLJD,CEII,IAAY,IAAY,IAAa;AFH5C,AEIA,AQgBI,WVpBC,AEIA,CAAL,CQgBS,ERhBA,CQgBL,CRhBJ,CFJA,GAAe,KAAK,OAAL,GAAe,KAAK,IAAnC;AKIE,ALHF,AEIA,AQgBM,UAAA,CVpBD,AEIA,CAAL,CGDO,EHCE,CQgBG,CRhBZ,AQgBa,EVpBb,EUoBM,CAAY,IAAI,ILjBL,IAAf,KKiBg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","file":"main.1f19ae8e.js","sourceRoot":"../build","sourcesContent":["export default class Settings {\n  resolution = 16;\n  public static readonly resolution: number = 16;\n  step: number = 8;\n  sprite: HTMLDivElement;\n  playerSize: string;\n\n  constructor(\n    public element: HTMLElement,\n    public elementClasses: string,\n    public x: number,\n    public y: number\n  ) {\n    this.playerSize = this.getPlayerSize();\n  }\n\n  createElement() {\n    this.sprite = document.createElement(\"div\");\n    this.sprite.setAttribute(\"class\", this.elementClasses);\n    this.sprite.style.width = this.playerSize;\n    this.sprite.style.height = this.playerSize;\n    this.sprite.style.left = this.posX();\n    this.sprite.style.top = this.posY();\n    this.element.appendChild(this.sprite);\n  }\n\n  getPlayerSize(): string {\n    const percent: number = 100 / this.resolution;\n    return `${percent.toString()}%`;\n  }\n\n  posX(): string {\n    const percent: number = ((this.x - 1) * 100) / this.resolution;\n    return `${percent.toString()}%`;\n  }\n\n  posY(): string {\n    const percent: number = ((this.y - 1) * 100) / this.resolution;\n    return `${percent.toString()}%`;\n  }\n}\n","import Settings from \"./settings.class\";\n\nexport default class Element extends Settings {\n  offsetX: number = 0;\n  offsetY: number = 0;\n  constructor(\n    public x: number,\n    public y: number,\n    public element: HTMLElement,\n    public elementClasses: string\n  ) {\n    super(element, elementClasses, x, y);\n    this.createElement();\n  }\n\n  left() {\n    this.offsetX = this.offsetX - this.step;\n    this.execMove();\n  }\n\n  right() {\n    this.offsetX = this.offsetX + this.step;\n    this.execMove();\n  }\n\n  up() {\n    this.offsetY = this.offsetY - this.step;\n    this.execMove();\n  }\n\n  down() {\n    this.offsetY = this.offsetY + this.step;\n    this.execMove();\n  }\n\n  execMove() {\n    this.sprite.style.transform = `translate3d(${this.offsetX}%, ${this.offsetY}%, 0)`;\n  }\n\n  coordinates(): number[] {\n    return [\n      (this.x * 100) / this.resolution + (this.offsetX * 1) / this.resolution,\n      (this.y * 100) / this.resolution + (this.offsetY * 1) / this.resolution,\n    ];\n  }\n}\n","import Player from \"../classes/player.class\";\nimport Bush from \"../classes/bush.class\";\nimport Trash from \"../classes/trash.class\";\nimport Animal from \"../classes/animal.class\";\n\nexport enum Direction {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\nexport interface Game {\n  player: Player;\n  bushes: Bush[];\n  trashes: Trash[];\n  animals: Animal[];\n  setActive: (arg0: boolean) => void;\n  hideOpeningTitle: ()=>void;\n}\n","import Element from \"./element.class\";\nimport { Direction } from \"../scripts/types\";\n\nexport default class Player extends Element {\n  artDiv: HTMLDivElement;\n\n  constructor(\n    public x: number,\n    public y: number,\n    element: HTMLElement,\n    elementClasses: string,\n    public direction: Direction\n  ) {\n    super(x, y, element, elementClasses);\n    this.prepareElement();\n  }\n\n  prepareElement() {\n    this.artDiv = document.createElement(\"div\");\n    this.artDiv.setAttribute(\"class\", \"player right\");\n    this.sprite.appendChild(this.artDiv);\n    \n  }\n\n  newLevel(nX: number, nY: number, nD: Direction) {\n    this.x = nX;\n    this.y = nY;\n    this.direction = nD;\n    this.artDiv.setAttribute(\"class\", \"player right\");\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.sprite.style.left = this.posX();\n    this.sprite.style.top = this.posY();\n  }\n\n  move() {\n    switch (this.direction) {\n      case Direction.Right:\n        this.right();\n        break;\n      case Direction.Left:\n        this.left();\n        break;\n      case Direction.Up:\n        this.up();\n        break;\n      case Direction.Down:\n        this.down();\n        break;\n    }\n  }\n\n  switchDirection(dir: string) {\n    switch (this.direction) {\n      case Direction.Right:\n        this.artDiv.classList.toggle(\"right\");\n        break;\n      case Direction.Left:\n        this.artDiv.classList.toggle(\"left\");\n        break;\n      case Direction.Up:\n        this.artDiv.classList.toggle(\"up\");\n        break;\n      case Direction.Down:\n        this.artDiv.classList.toggle(\"down\");\n        break;\n    }\n    switch (dir) {\n      case \"ArrowRight\":\n        this.artDiv.classList.toggle(\"right\");\n        this.direction = Direction.Right;\n        break;\n      case \"ArrowLeft\":\n        this.artDiv.classList.toggle(\"left\");\n        this.direction = Direction.Left;\n        break;\n      case \"ArrowUp\":\n        this.artDiv.classList.toggle(\"up\");\n        this.direction = Direction.Up;\n        break;\n      case \"ArrowDown\":\n        this.artDiv.classList.toggle(\"down\");\n        this.direction = Direction.Down;\n        break;\n    }\n  }\n}\n","import Element from \"./element.class\";\nimport { Direction } from \"../scripts/types\";\n\nexport default class Bush extends Element {\n  constructor(\n    x: number,\n    y: number,\n    element: HTMLElement,\n    elementClasses: string,\n    public direction: Direction\n  ) {\n    super(x, y, element, elementClasses);\n  }\n}\n","import Element from \"./element.class\";\nimport { Direction } from \"../scripts/types\";\n\nexport default class Trash extends Element {\n  constructor(\n    x: number,\n    y: number,\n    element: HTMLElement,\n    elementClasses: string,\n    public direction: Direction\n  ) {\n    super(x, y, element, elementClasses);\n  }\n\n  collected(){\n    this.sprite.remove();\n  }\n}\n","import Element from \"./element.class\";\nimport { Direction } from \"../scripts/types\";\n\nexport default class Animal extends Element {\n  constructor(\n    x: number,\n    y: number,\n    element: HTMLElement,\n    elementClasses: string,\n    public direction: Direction\n  ) {\n    super(x, y, element, elementClasses);\n  }\n\n  move() {\n    switch (this.direction) {\n      case Direction.Right:\n        this.right();\n        break;\n      case Direction.Left:\n        this.left();\n        break;\n      case Direction.Up:\n        this.up();\n        break;\n      case Direction.Down:\n        this.down();\n        break;\n    }\n  }\n\n  switchDirection() {\n    switch (this.direction) {\n      case Direction.Right:\n        this.direction = Direction.Left;\n        break;\n      case Direction.Left:\n        this.direction = Direction.Right;\n        break;\n      case Direction.Up:\n        this.direction = Direction.Down;\n        break;\n      case Direction.Down:\n        this.direction = Direction.Up;\n        break;\n    }\n  }\n\n}\n","const level: string = `\nBBBBBBBBBBBBBBBB\nBB00B000000000BB\nB000B0000000000B\nB00000000000000B\nB00000T000T00BBB\nB0000000B000000B\nBP00000BBB00000B\nB0000000B000000B\nB00000T000T0000B\nB00000000000000B\nB00000000000000B\nBBB000000000000B\nB00000000000000B\nB0000000000B000B\nBB000000000B00BB\nBBBBBBBBBBBBBBBB\n`;\nexport default level;\n","const level: string = `\nBBBBBBBBBBBBBBBB\nB00000000000000B\nB0000T000000000B\nB00000000000000B\nB000B00A000B000B\nB00000000000000B\nB00000000000000B\nBP0000000000000B\nB00000000000000B\nB00000000000000B\nB00000000000000B\nB000B000A00B000B\nB00000000000000B\nB0000000000T000B\nB00000000000000B\nBBBBBBBBBBBBBBBB\n`;\nexport default level;\n","const level: string = `\nBBBBBBBBBBBBBBBB\nB0000000B000000B\nB00000000000000B\nB000B00T0000000B\nB00000000000000B\nB00000000000000B\nB000000000000A0B\nBP0000000B00000B\nB0000A000000000B\nB00000000000000B\nB00000000000000B\nB00B00000A00T00B\nB00000000000000B\nB00T00000B000B0B\nB00T00000B000B0B\nBBBBBBBBBBBBBBBB\n`;\nexport default level;\n","import level1 from \"./1\";\nimport level2 from \"./2\";\nimport level3 from \"./3\";\n\nconst levels: string[] = [level1, level2, level3];\n\nexport default levels;\n","import Player from \"../classes/player.class\";\nimport Bush from \"../classes/bush.class\";\nimport Trash from \"../classes/trash.class\";\nimport Animal from \"../classes/animal.class\";\nimport { Direction, Game } from \"../scripts/types\";\nimport levels from \"../levels/levels\";\nimport { ticker } from \"../main\";\nimport Settings from \"../classes/settings.class\";\n\nlet player: Player,\n  bushes: Bush[] = [],\n  trashes: Trash[] = [],\n  animals: Animal[] = [],\n  level: number,\n  mountGame: HTMLElement;\n\nconst startLevel = (levelNo: number, target: HTMLElement): Game => {\n  level = levelNo;\n  mountGame = target;\n  const charList: string[] = levels[level].split(/\\n/);\n  for (let y: number = 1; y <= Settings.resolution; y++)\n    for (let x: number = 1; x <= Settings.resolution; x++) {\n      let cur: string = charList[y][x - 1];\n      switch (cur) {\n        case \"0\":\n          break;\n        case \"P\":\n          if (!player) {\n            // start game\n            player = new Player(\n              x,\n              y,\n              mountGame,\n              \"element persistent\",\n              Direction.Right\n            );\n          } else {\n            // new level\n            player.newLevel(x, y, Direction.Right);\n          }\n          break;\n        case \"B\":\n          bushes.push(new Bush(x, y, mountGame, \"element bush\", null));\n          break;\n        case \"T\":\n          trashes.push(new Trash(x, y, mountGame, \"element trash\", null));\n          break;\n        case \"A\":\n          animals.push(\n            new Animal(\n              x,\n              y,\n              mountGame,\n              \"element animal\",\n              Math.random() >= 0.5 ? Direction.Right : Direction.Down\n            )\n          );\n          break;\n      }\n    }\n  const setActive = (v: boolean): void => {\n    window.active = v;\n  };\n  const hideOpeningTitle = () => {\n    document.getElementById(\"opening-title\").style.display = 'none';\n  }\n  return {\n    player,\n    bushes,\n    trashes,\n    animals,\n    setActive,\n    hideOpeningTitle\n  };\n};\n\nconst nextLevel = () => {\n  //clear last level\n  bushes.length = 0;\n  trashes.length = 0;\n  animals.length = 0;\n  const children = mountGame.children;\n  while (children[0] && children[1]) {\n    [0, 1].map(\n      (v) =>\n        !children[v].classList.contains(\"persistent\") && children[v].remove()\n    );\n  }\n  startLevel(level + 1, mountGame);\n};\n\nconst firstLevel = () => {\n  level = -1;\n  nextLevel();\n};\n\nconst checkCollisions = (game: Game) => {\n  const diff: number = 100 / player.resolution;\n  const check = (x1: number, y1: number, x2: number, y2: number): boolean => {\n    if (x1 === x2 || (x1 > x2 && x1 < x2 + diff) || (x2 > x1 && x2 < x1 + diff))\n      if (\n        y1 === y2 ||\n        (y1 > y2 && y1 < y2 + diff) ||\n        (y2 > y1 && y2 < y1 + diff)\n      )\n        return true;\n    return false;\n  };\n  // player\n  {\n    let [x1, y1]: number[] = player.coordinates();\n    if (x1 % player.resolution !== 0 && y1 % player.resolution !== 0) {\n      bushes.map((bush) => {\n        let [x2, y2]: number[] = bush.coordinates();\n        if (check(x1, y1, x2, y2)) endGame();\n      });\n      animals.map((animal) => {\n        let [x2, y2]: number[] = animal.coordinates();\n        if (check(x1, y1, x2, y2)) endGame();\n      });\n      trashes.map((trash, key) => {\n        let [x2, y2]: number[] = trash.coordinates();\n        if (check(x1, y1, x2, y2)) {\n          trash.collected();\n          delete trashes[key];\n          checkCompletedLevel();\n        }\n      });\n    }\n  }\n  // animal\n  animals.map((animal) => {\n    let [x1, y1]: number[] = animal.coordinates();\n    bushes.map((bush) => {\n      let [x2, y2]: number[] = bush.coordinates();\n      if (check(x1, y1, x2, y2)) animal.switchDirection();\n    });\n  });\n};\n\nconst endGame = () => {\n  window.active = false;\n  alert(`You are dead! You managed to complete ${level} levels.`);\n  firstLevel();\n};\n\nconst checkCompletedLevel = () => {\n  for (let i: number = 0; i < trashes.length; i++) {\n    if (trashes[i]) return;\n  }\n  if (level < levels.length - 1) {\n    nextLevel();\n    return;\n  }\n  window.active = false;\n  alert(`Well done! You completed all ${level + 1} levels!`);\n  firstLevel();\n};\n\nexport { startLevel, endGame, checkCollisions };\n","import { startLevel, checkCollisions } from \"./scripts/actions\";\nimport { Game } from \"./scripts/types\";\nimport Player from \"./classes/player.class\";\nimport Animal from \"./classes/animal.class\";\n\nconst mountGame: HTMLElement = document.getElementById(\"mount-game\");\n\nconst game: Game = startLevel(0, mountGame);\nconst player: Player = game.player;\nconst animals: Animal[] = game.animals;\n\ndeclare global {\n  interface Window { active: boolean; }\n}\n\nwindow.active = false; // global activity\nconst ticker = setInterval(() => {\n  if (window.active) {\n    player.move();\n    animals.map((animal) => {\n      animal.move();\n    });\n    checkCollisions(game);\n  }\n}, 100 / 3);\n\ndocument.addEventListener(\"keydown\", (e: KeyboardEvent) => {\n  if (!window.active) {\n    window.active = true;\n    game.hideOpeningTitle();\n  }\n  player.switchDirection(e.code);\n});\n\nexport { ticker };\n"]}