{"version":3,"sources":["../../src/classes/settings.class.ts","../../src/classes/element.class.ts","../../src/scripts/types.ts","../../src/classes/player.class.ts","../../src/levels/1.ts","../../src/levels/levels.ts","../../src/scripts/actions.ts","../src/main.ts"],"names":[],"mappings":"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","file":"main.ce277143.js","sourceRoot":"../build","sourcesContent":["export default class Settings {\n  resolution: number = 20;\n  step: number = 10;\n  sprite: HTMLDivElement;\n  playerSize: string;\n\n  constructor(\n    public element: HTMLElement,\n    public elementId: string,\n    public elementClasses: string,\n    public x: number,\n    public y: number\n  ) {\n    this.playerSize = this.getPlayerSize();\n  }\n\n  createElement() {\n    this.sprite = document.createElement(\"div\");\n    this.sprite.setAttribute(\"id\", this.elementId);\n    this.sprite.setAttribute(\"class\", this.elementClasses);\n    this.sprite.style.width = this.playerSize;\n    this.sprite.style.height = this.playerSize;\n    this.sprite.style.left = this.posX();\n    this.sprite.style.top = this.posY();\n    this.element.appendChild(this.sprite);\n  }\n\n  getPlayerSize(): string {\n    const percent: number = 100 / this.resolution;\n    return `${percent.toString()}%`;\n  }\n\n  posX(): string {\n    const percent: number = (this.x-1)*100 / this.resolution;\n    return `${percent.toString()}%`;\n  }\n\n  posY(): string {\n    const percent: number = (this.y-1)*100 / this.resolution;\n    return `${percent.toString()}%`;\n  }\n}\n","import Settings from \"./settings.class\";\n\nexport default class Element extends Settings{\n    offsetX: number = 0;\n    offsetY: number = 0;\n    constructor(\n        public x: number,\n        public y: number,\n        public element: HTMLElement,\n        public elementId: string,\n        public elementClasses: string\n    ){\n        super(element, elementId, elementClasses, x, y);\n        this.createElement();\n    }\n\n    left(){\n        this.offsetX = this.offsetX - this.step;\n        this.execMove();\n    }\n\n    right(){\n        this.offsetX = this.offsetX + this.step;\n        this.execMove();\n    }\n\n    up(){\n        this.offsetY = this.offsetY - this.step;\n        this.execMove();\n    }\n\n    down(){\n        this.offsetY = this.offsetY + this.step;\n        this.execMove();\n    }\n\n    execMove(){\n        this.sprite.style.transform=`translate3d(${this.offsetX}%, ${this.offsetY}%, 0)`;\n    }\n}","import Player from \"../classes/player.class\";\n\nexport enum Direction {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\nexport interface Game {\n    player: Player\n}\n","import Element from \"./element.class\";\nimport { Direction } from \"../scripts/types\";\n\nexport default class Player extends Element {\n  constructor(\n    x: number,\n    y: number,\n    element: HTMLElement,\n    elementId: string,\n    elementClasses: string,\n    public direction: Direction\n  ) {\n    super(x, y, element, elementId, elementClasses);\n  }\n\n  move() {\n    switch (this.direction) {\n      case Direction.Right:\n        this.right();\n        break;\n      case Direction.Left:\n        this.left();\n        break;\n      case Direction.Up:\n        this.up();\n        break;\n      case Direction.Down:\n        this.down();\n        break;\n    }\n  }\n\n  switchDirection(dir: string) {\n    switch (dir) {\n      case \"ArrowRight\":\n        this.direction = Direction.Right;\n        break;\n      case \"ArrowLeft\":\n        this.direction = Direction.Left;\n        break;\n      case \"ArrowUp\":\n        this.direction = Direction.Up;\n        break;\n      case \"ArrowDown\":\n        this.direction = Direction.Down;\n        break;\n    }\n  }\n}\n","const level: string =`\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\nP0000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n00000000000000000000\n`;\nexport default level;","import level1 from \"./1\";\n\nconst levels: string[] = [\n    level1\n];\n\nexport default levels;","import Player from \"../classes/player.class\";\nimport { Direction, Game } from \"../scripts/types\";\nimport levels from \"../levels/levels\";\n\nconst startLevel = (level: number, mountGame: HTMLElement): Game => {\n  let player: Player;\n  const charList: string[] = levels[level].split(/\\n/);\n  for (let y: number = 1; y <= 20; y++)\n    for (let x: number = 1; x <= 20; x++) {\n      let cur: string = charList[y][x - 1];\n      switch (cur) {\n        case \"0\":\n          break;\n        case \"P\":\n          player = new Player(\n            x,\n            y,\n            mountGame,\n            \"player\",\n            \"element player\",\n            Direction.Right\n          );\n      }\n    }\n  return {\n    player,\n  };\n};\n\nexport { startLevel };\n","import { startLevel } from \"./scripts/actions\";\nimport { Game } from \"./scripts/types\";\nimport Player from \"./classes/player.class\";\n\nconst mountGame: HTMLElement = document.getElementById(\"mount-game\");\n\nconst game: Game = startLevel(0, mountGame);\nconst player: Player = game.player;\n\nconst ticker = setInterval(() => {\n    player.move();\n}, 1000/30);\n\ndocument.addEventListener(\"keydown\", (e: KeyboardEvent) => player.switchDirection(e.code));\n"]}